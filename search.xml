<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>My first blog</title>
    <url>/2021/10/24/My-first-blog/</url>
    <content><![CDATA[<p>恍恍惚惚，现在都大二了，我开始意识到了对于学计算机的，写博客是多么的重要，于是就有了这个网站，希望能和大家一起学习。</p>
]]></content>
      <categories>
        <category>通知</category>
      </categories>
      <tags>
        <tag>notice</tag>
      </tags>
  </entry>
  <entry>
    <title>进制转换函数 itoa() 详解</title>
    <url>/2021/10/28/itoa()%E5%87%BD%E6%95%B0%E5%88%97%E9%A2%98/</url>
    <content><![CDATA[<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>昨晚深夜忽有一人问我一道题怎么写，是道进制转换的题，一开始我以为很简单，但这道题还是花了我一个小时的时间，而且大部分时间都花在了对于c语言itoa()函数的误解。<br>由该函数的参数列表可知(该函数的定义可以在stdlib.h文件中找到)</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">char</span> *__cdecl <span class="title">itoa</span><span class="params">(<span class="keyword">int</span> _Val,<span class="keyword">char</span> *_DstBuf,<span class="keyword">int</span> _Radix)</span> __MINGW_ATTRIB_DEPRECATED_MSVC2005</span>;</span><br></pre></td></tr></table></figure>

<p>该函数可以把一个任意的十进制数转换为任意进制的字符串。而且经过debug我发现这个字符串的存储是从高位到低位。而这和下面题目要实现的目标不相符。因为55经过转换后会变成110111，而不是00000000000000000000000000110111 ，所以我们需要对这个字符串进行移位，使其从低地址到高地址排列。而这一部还是很好实现的，只需要写个循环。当一切准备就绪时，我以为我完成了，但没想到啊，-55的转换结果和目标大相径庭，于是我又debug了一次，发现了原因： <strong>itoa()函数最终是通过补码的形式存储结果</strong>。但我以为是用源码存储所以我错了，但知道了这个特性后我很快就写出来了正解，但由于我忘了IEEE754浮点数是啥，所以没写这部分。</p>
<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>32位机器数，输入一个十进制数，转换为二进制数，显示其原码、反码、补码、移码及IEEE754浮点数。</p>
<p>input 1:</p>
<p>55</p>
<p>output 1:</p>
<p>原码:00000000000000000000000000110111<br>反码:00000000000000000000000000110111<br>补码:00000000000000000000000000110111<br>移码:10000000000000000000000000110111<br>IEEE754浮点数: 01000010010111000000000000000000</p>
<h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a,flag,tmp;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;flag);</span><br><span class="line">    a=(<span class="keyword">int</span>)<span class="built_in">abs</span>(flag);</span><br><span class="line">    <span class="keyword">char</span> b[<span class="number">33</span>],c[<span class="number">33</span>],d[<span class="number">33</span>],e[<span class="number">33</span>],t[<span class="number">33</span>];</span><br><span class="line">    itoa(a,t,<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">33</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(t[i]==<span class="string">&#x27;\0&#x27;</span>)&#123;</span><br><span class="line">            tmp=i;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">33</span>;i++)&#123;</span><br><span class="line">        b[i]=<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=tmp;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">        b[<span class="number">32</span>-tmp+i]=t[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(flag&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">33</span>;i++)&#123;</span><br><span class="line">            c[i]=b[i];</span><br><span class="line">            d[i]=b[i];</span><br><span class="line">            e[i]=b[i];</span><br><span class="line">        &#125;</span><br><span class="line">        e[<span class="number">0</span>]=<span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        itoa(flag,d,<span class="number">2</span>);</span><br><span class="line">        b[<span class="number">0</span>]=<span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;<span class="number">32</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(b[i]==<span class="string">&#x27;0&#x27;</span>)&#123;</span><br><span class="line">                c[i]=<span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                c[i]=<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        c[<span class="number">0</span>]=<span class="string">&#x27;1&#x27;</span>;c[<span class="number">32</span>]=<span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;<span class="number">32</span>;i++)&#123;</span><br><span class="line">            e[i]=d[i];</span><br><span class="line">        &#125;</span><br><span class="line">        e[<span class="number">0</span>]=<span class="string">&#x27;0&#x27;</span>;e[<span class="number">32</span>]=<span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n%s\n%s\n%s&quot;</span>,b,c,d,e);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>easy</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2021/10/24/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>关于BFS的例题</title>
    <url>/2021/10/25/%E5%85%B3%E4%BA%8EBFS%E7%9A%84%E4%BE%8B%E9%A2%98/</url>
    <content><![CDATA[<p>题名：银老板家的电梯</p>
<p>题目描述</p>
<p>众所周知银老板是喀兰贸易的老大，银老板家也很有钱，上下楼都要用电梯，但是电梯里面没有按钮，电梯外面有上和下，按上你就会上升mi层，按下你就会下降mi层，即到达i+mi层或者i-mi层，i是你的当前楼层。现在银老板在p层，他想要去t层，请你帮帮银老板他最少需要按多少下按钮可以到达目的地。说不定他就来到你岛了呢？如果你还没有理解题意的话好吧我就举个例子：比如银老板在第2层，想要去第5层，且m依次为4,1,2,3,4;则他最少需要按2次（连续按2次上或者先按1次下再按1次上）才能到达目的地。（楼层&gt;=1）</p>
<p>输入<br>第一行一个n,p,t（1&lt;=n,p,t&lt;=200）</p>
<p>第二行n个整数m1,m2…….mn;（0&lt;=mi&lt;=50）</p>
<p>输出<br>一个整数表示从p层到t层最少需要按多少次。如果不能到达输出-1。</p>
<p>输入样例 1<br>5 2 5<br>4 1 2 3 4</p>
<p>输出样例 1<br>2</p>
<p>输入样例 2<br>6 3 2<br>1 2 3 4 5 6</p>
<p>输出样例 2<br>-1</p>
<p>解题思路</p>
<p>根据题意可知，每层楼对应的下一层选项最多有两个，所以我们采用二维数组来存储每一层的一些信息。再来采用BFS算法，在使用BFS算法时我们需要一个队列，对于已经入队的楼层，我们先检查它是否是我们要达到的楼层，若不是则出列，并且将它的下一层入队，是则直接输出该楼层的循环次数。</p>
<p>源码</p>
<p>#include<iostream><br>#include<algorithm><br>#include<queue><br>#include<cstring><br>using namespace std;<br>const int MAXSIZE=201;<br>int n,s,e;<br>int floor[MAXSIZE][2];<br>struct info{<br>    int pos;<br>    int time;<br>};<br>queue<info> q;<br>int path(){<br>    info now,next,tmp;<br>    tmp.pos=s;<br>    tmp.time=0;<br>    q.push(tmp);<br>    if(s&lt;1||s&gt;MAXSIZE||e&lt;1||e&gt;MAXSIZE){<br>        return -1;<br>    }<br>    while(!q.empty()){<br>        now=q.front();<br>        if(now.pos==e){<br>            return now.time;<br>        }<br>        q.pop();<br>        int up=floor[now.pos][0];<br>        int down=floor[now.pos][1];<br>        if(up!=-1){<br>            next.pos=up;<br>            next.time=now.time+1;<br>            q.push(next);<br>        }<br>        if(down!=-1){<br>            next.pos=down;<br>            next.time=now.time+1;<br>            q.push(next);<br>        }<br>    }<br>    return -1;<br>}<br>int main(){<br>    cin&gt;&gt;n;<br>    memset(floor,-1,sizeof(floor));<br>    cin&gt;&gt;s&gt;&gt;e;<br>    for(int i=1;i&lt;=n;i++){<br>        int t;<br>        cin&gt;&gt;t;<br>        if(i+t&lt;=n){<br>            floor[i][0]=i+t;<br>        }<br>        if(i-t&gt;0){<br>            floor[i][1]=i-t;<br>        }<br>    }<br>    cout&lt;&lt;path();<br>}</p>
<p>问题</p>
<p>由于我是用结构体作为队列的元素，导致我代码的空间复杂度很高，在oj上跑的时候占用空间超出范围了，不让我过。于是我又换了一种思路。</p>
<p>解题思路</p>
<p>现在我只用一个一维数组来存储信息，数组下标代表层数，对应下标所指的数代表它与下一层的差，然后再用一个同样大小的布尔类型一维数组来存储我是否已经到过这了，其他判断条件和第一次类似。</p>
<p>源码</p>
<p>#include<iostream><br>#include<algorithm><br>using namespace std;<br>const int N=220;<br>int num[N];<br>bool re[N];<br>int n,b=99999,a=0,p,t;<br>void go(int k,int a)<br>{<br>    if(k==t) b=a;<br>if(a&gt;=b) return;<br>if(!re[k+num[k]]&amp;&amp;k+num[k]&lt;=n) {<br>    re[k+num[k]]=true;<br>    a++;<br>    go(k+num[k],a);<br>    a–;<br>    re[k+num[k]]=false;<br>}</p>
<p>if(!re[k-num[k]]&amp;&amp;k-num[k]&gt;0) {<br>    re[k-num[k]]=true;<br>    a++;<br>    go(k-num[k],a);<br>    re[k-num[k]]=false;<br>a–;<br>}</p>
<p>}<br>int main()<br>{<br>    cin&gt;&gt;n&gt;&gt;p&gt;&gt;t;<br>    for(int i=1;i&lt;=n;i++)<br>    cin&gt;&gt;num[i];<br>    re[p]=true;<br>    go(p,0);<br>    if(b==99999)<br>     cout&lt;&lt;-1&lt;&lt;endl;<br>  else<br>      cout&lt;&lt;b&lt;&lt;endl;<br>}</p>
<p>这是正解。</p>
]]></content>
      <categories>
        <category>ACM</category>
      </categories>
      <tags>
        <tag>common</tag>
      </tags>
  </entry>
  <entry>
    <title>分类与标签功能已开启</title>
    <url>/2021/11/01/%E5%88%86%E7%B1%BB%E4%B8%8E%E6%A0%87%E7%AD%BE/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>通知</category>
      </categories>
      <tags>
        <tag>notice</tag>
      </tags>
  </entry>
  <entry>
    <title>博弈论--矩形内画圆</title>
    <url>/2021/10/27/%E5%8D%9A%E5%BC%88%E8%AE%BA--%E7%9F%A9%E5%BD%A2%E5%86%85%E7%94%BB%E7%94%BB%E5%9C%86/</url>
    <content><![CDATA[<p>上个月我在写acm的题时，碰到了这么一道题，直到昨天我才把它解出来。</p>
<h1 id="题名：赢不了的谢强富"><a href="#题名：赢不了的谢强富" class="headerlink" title="题名：赢不了的谢强富"></a>题名：赢不了的谢强富</h1><h2 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h2><p>​        某天，谢强富在慕课上看了两个人玩游戏，谢强富对这个游戏很感兴趣，所以他立马拉上了志强一起玩这个游戏。游戏规则如下：首先两个人在一张纸上画了一个长宽分别为A,B的严格的矩形，然后两人依次画半径为R的圆，两人画的圆可以相切但是绝对不允许相交，当其中某一个人无法画出圆的时候，他就输了。谢强富和志强都很聪明。谢强富要首先画圆，但是玩了很多次，谢强富发现自己输多赢少，他想请问你，什么时候他能赢。</p>
<p>Input</p>
<p>第一行输入n，代表有n组测试样例。</p>
<p>每一组测试样例输入矩形的长：A，宽：B，和圆的半径：R。</p>
<p>Output</p>
<p>对于每一组测试样例，如果谢强富能赢输出YES,否则输出NO。</p>
<p>Sample Input 1 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2</span><br><span class="line">4 5 6</span><br><span class="line">5 5 2</span><br></pre></td></tr></table></figure>

<p>Sample Output 1</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">NO</span><br><span class="line">YES</span><br></pre></td></tr></table></figure>

<h2 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：</h2><p>​        其实我刚开始拿到这道题时我也很懵，似乎对于每一个案例的解法都是不一样的，而圆的最优位置也无从得知，反正就是想方设法让对手画不下去。<br>​        但片刻思考过后我们都应知道，第一个圆一定是画在矩形的正中心，这样其他空间的最大空白处就是除圆以外的矩形的四个角，而四个角能不能画下另一个圆似乎就要再次计算了，而且计算过程好像还挺复杂的，如果能画下，那别的三个角都能画下了，然后继续计算，角上的圆之间似乎又会产生空隙，我们继续计算最大的空隙是否能再画圆，而且这次的计算过程似乎还和上次不一样，也更复杂了。<br>这样就导致我们对于解题的整体思路不够清晰，写不出来代码。<br>​        上述方法其实是个误区，我们应该这样想，假如A先画，如果能画下去，那么会有四个空位，四个空位如果不能继续画下去，那A就赢了，如果能画下去，那么画的顺序将是B，A，B，A，意思就是如果B能画，那么A也能画，然后还是B画，B又要在剩下的空间里画，如果B能画，由于空间是对称的，所以会有2N的空位画，这样A还是最后画，如此循环，发现最后B肯定会有画不下去的时候。<br>​        所以我们得出结论只要先手的人能画下第一个圆，那么他就已经赢了。</p>
<h2 id="源码："><a href="#源码：" class="headerlink" title="源码："></a>源码：</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,a,b,r;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        cin&gt;&gt;a&gt;&gt;b&gt;&gt;r;</span><br><span class="line">        <span class="keyword">if</span>(<span class="number">2</span>*r&lt;=a&amp;&amp;<span class="number">2</span>*r&lt;=b)&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;YES&quot;</span>&lt;&lt;endl;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;NO&quot;</span>&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="心得："><a href="#心得：" class="headerlink" title="心得："></a>心得：</h2><p>莽做题，莽计算是会浪费很多时间的，找到规律，问题就迎刃而解了！</p>
<p><img src="https://cdn.jsdelivr.net/gh/QshuRyaoF/MyPictureBed@master/img/%E8%A1%8C%E6%94%BF.jpg" alt="行政"></p>
]]></content>
      <categories>
        <category>ACM</category>
      </categories>
      <tags>
        <tag>common</tag>
      </tags>
  </entry>
  <entry>
    <title>头歌 数据结构 实训四——串</title>
    <url>/2021/11/01/%E5%A4%B4%E6%AD%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AE%9E%E8%AE%AD%E5%9B%9B/</url>
    <content><![CDATA[<h3 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h3><p>花了20分钟作业写的三道题，没什么难度可言，这里就不详细解答了，<strong>只给出要求填写的函数代码</strong>(其中的乱码是中文，可以是编译格式问题导致的，不影响代码)。</p>
<h3 id="第一关：求子串"><a href="#第一关：求子串" class="headerlink" title="第一关：求子串"></a>第一关：求子串</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SubStr</span><span class="params">(SString t, SString s,<span class="keyword">int</span> i,<span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"><span class="comment">//从s的第i个字符开始截取长度为len的子串存入t中。</span></span></span><br><span class="line"><span class="function"><span class="comment">//其中1≦i≦串s的长度, 0≦len≦ 串s的长度-i+1。</span></span></span><br><span class="line"><span class="function"><span class="comment">//若i和len超出取值范围，则输出&quot;error&quot;；否则输出子串t。</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">// 请在这里补充代码，完成本关任务</span></span><br><span class="line">    <span class="comment">/********** Begin *********/</span></span><br><span class="line">    <span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">if</span>(i&lt;<span class="number">1</span>||i&gt;s[<span class="number">0</span>]||len&lt;<span class="number">0</span>||len&gt;s[<span class="number">0</span>]-i+<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;error\n&quot;</span>); </span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(len==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(j=i;j&lt;i+len;j++)&#123;</span><br><span class="line">            t[j-i]=s[j];</span><br><span class="line">        &#125;</span><br><span class="line">        t[j+<span class="number">1</span>]=<span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,t);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/********** End **********/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="第二关：串的模式匹配之简单算法"><a href="#第二关：串的模式匹配之简单算法" class="headerlink" title="第二关：串的模式匹配之简单算法"></a>第二关：串的模式匹配之简单算法</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">StrIndex_BF</span><span class="params">(SString s, SString t, <span class="keyword">int</span> pos)</span></span></span><br><span class="line"><span class="function"><span class="comment">//´ÓÖ÷´®sµÄµÚpos¸ö×Ö·û¿ªÊ¼²éÕÒ×Ó´®t¡£</span></span></span><br><span class="line"><span class="function"><span class="comment">//ÈôÕÒµ½£¬Ôò·µ»Ø×Ó´®tÔÚÖ÷´®sÖÐµÚÒ»´Î³öÏÖµÄÎ»ÖÃ£¬·ñÔò·µ»Ø0¡£</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// ÇëÔÚÕâÀï²¹³ä´úÂë£¬Íê³É±¾¹ØÈÎÎñ</span></span><br><span class="line">    <span class="comment">/********** Begin *********/</span></span><br><span class="line">    <span class="keyword">int</span> m=s[<span class="number">0</span>];<span class="keyword">int</span> n=t[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">char</span> tmp=s[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m-n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i+j]!=t[j+<span class="number">1</span>])&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(j==n<span class="number">-1</span>)&#123;</span><br><span class="line">                    <span class="keyword">return</span> i;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="comment">/********** End **********/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="第三关：串的模式匹配之KMP算法"><a href="#第三关：串的模式匹配之KMP算法" class="headerlink" title="第三关：串的模式匹配之KMP算法"></a>第三关：串的模式匹配之KMP算法</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GetNext</span><span class="params">(SString t, <span class="keyword">int</span> next[])</span></span></span><br><span class="line"><span class="function"><span class="comment">//ÇóÄ£Ê½´®TµÄnextÖµ²¢´æÈënextÊý×éÖÐ</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">// ÇëÔÚÕâÀï²¹³ä´úÂë£¬Íê³É±¾¹ØÈÎÎñ</span></span><br><span class="line">    <span class="comment">/********** Begin *********/</span></span><br><span class="line">    <span class="keyword">int</span> j=<span class="number">1</span>;<span class="keyword">int</span> i=<span class="number">0</span>;next[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span>(j&lt;=t[<span class="number">0</span>])&#123;</span><br><span class="line">		<span class="keyword">if</span>(i==<span class="number">0</span>||t[j]==t[i])&#123;</span><br><span class="line">			i++;j++;</span><br><span class="line">			next[j]=i;</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			i=next[i];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">/********** End   *********/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>头歌</category>
      </categories>
      <tags>
        <tag>easy</tag>
      </tags>
  </entry>
  <entry>
    <title>评论区已开启</title>
    <url>/2021/10/31/%E8%AF%84%E8%AE%BA%E5%8C%BA/</url>
    <content><![CDATA[<h4 id="评论区已经开始试运行，由于没有通知功能，所以我并不能及时的知道你们的评论，而我又很难有空去翻每一篇文章的评论区，看是否有新的问题，所以希望有问题的评论完后可以QQ和我说一下，谢谢。"><a href="#评论区已经开始试运行，由于没有通知功能，所以我并不能及时的知道你们的评论，而我又很难有空去翻每一篇文章的评论区，看是否有新的问题，所以希望有问题的评论完后可以QQ和我说一下，谢谢。" class="headerlink" title="评论区已经开始试运行，由于没有通知功能，所以我并不能及时的知道你们的评论，而我又很难有空去翻每一篇文章的评论区，看是否有新的问题，所以希望有问题的评论完后可以QQ和我说一下，谢谢。"></a>评论区已经开始试运行，由于没有通知功能，所以我并不能及时的知道你们的评论，而我又很难有空去翻每一篇文章的评论区，看是否有新的问题，所以希望有问题的评论完后可以QQ和我说一下，谢谢。</h4>]]></content>
      <categories>
        <category>通知</category>
      </categories>
      <tags>
        <tag>notice</tag>
      </tags>
  </entry>
  <entry>
    <title>汉英词典</title>
    <url>/2021/10/29/%E6%B1%89%E8%8B%B1%E8%AF%8D%E5%85%B8/</url>
    <content><![CDATA[<h3 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h3><p>我的大一下学期实训项目是好记星移动词典，基本功能是已知中文找英文，已知英文找中文，还要词典词条的增删查改，由于前俩天我就实现了这些功能，于是在之后我又增添了一个登录系统，虽然好像用处不大，但也还是我第一次写这种多文件互动的项目，写的比较用心，下面将附上项目源代码，和文件下载地址(文件是公开在本人的Github上的，有需要的可以随时取用,<strong>其中有7个文件，只要全都下载时，项目才能正常运行，且项目是通过main.c启动的</strong>)。</p>
<h3 id="文件链接-https-github-com-QshuRyaoF-ECdicttionary-tree-main-Dictionary"><a href="#文件链接-https-github-com-QshuRyaoF-ECdicttionary-tree-main-Dictionary" class="headerlink" title="文件链接:https://github.com/QshuRyaoF/ECdicttionary/tree/main/Dictionary"></a>文件链接:<a href="https://github.com/QshuRyaoF/ECdicttionary/tree/main/Dictionary">https://github.com/QshuRyaoF/ECdicttionary/tree/main/Dictionary</a></h3><h3 id="运行效果图："><a href="#运行效果图：" class="headerlink" title="运行效果图："></a>运行效果图：</h3><p><img src="https://cdn.jsdelivr.net/gh/QshuRyaoF/MyPictureBed@master/img/image-20211029005243741.png" alt="image-20211029005243741"></p>
<h3 id="Main-c"><a href="#Main-c" class="headerlink" title="Main.c"></a>Main.c</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;conio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;function.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;dictionary.c&quot;</span>  </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc,<span class="keyword">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\033[;36;5m ******************************************** \033[0m\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\033[;36;5m *               电子词典项目               * \033[0m\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\033[;36;5m ******************************************** \033[0m\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\033[;36;5m *     1. 注册     2. 登录     3. 退出      * \033[0m\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\033[;36;5m ******************************************** \033[0m\n&quot;</span>);</span><br><span class="line">    <span class="keyword">int</span> choice,flag;</span><br><span class="line">    <span class="keyword">char</span> FILENAME[<span class="number">20</span>]=<span class="string">&quot;user.txt&quot;</span>;</span><br><span class="line">    read(user,&amp;numofuser,FILENAME);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入：&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;choice);</span><br><span class="line">    <span class="keyword">switch</span> (choice)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:sign_in(&amp;numofuser,FILENAME,user);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:login(&amp;numofuser,user);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:<span class="built_in">printf</span>(<span class="string">&quot;\033[;31;5m   即将退出，欢迎您再次使用！  \033[0m\n&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:<span class="built_in">printf</span>(<span class="string">&quot;\033[;31;5m   输入错误，请重新输入！！！  \033[0m\n&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//统计函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(struct userlist user[],<span class="keyword">int</span> *numofuser,<span class="keyword">char</span> filename[])</span></span>&#123;</span><br><span class="line">    FILE *fp;</span><br><span class="line">    fp=fopen(filename,<span class="string">&quot;r&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(fp!=<span class="literal">NULL</span>)&#123;</span><br><span class="line">        <span class="keyword">while</span>(!feof(fp))&#123;</span><br><span class="line">            <span class="built_in">fscanf</span>(fp,<span class="string">&quot;%s %s %d&quot;</span>,&amp;user[*numofuser].name,&amp;user[*numofuser].pwd,&amp;user[*numofuser].numofmemwd);</span><br><span class="line">            (*numofuser)++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\033[;31;5m文件读取失败！！！ \033[0m\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(fp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//注册函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sign_in</span><span class="params">(<span class="keyword">int</span> *numofuser,<span class="keyword">char</span> filename[],struct userlist user[])</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> keyn[<span class="number">10</span>],keyp1[<span class="number">20</span>],keyp2[<span class="number">20</span>];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;用户名：&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,&amp;keyn);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;*numofuser;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strcmp</span>(user[i].name,keyn)==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\033[;31;5m    该用户已经注册,请登录！\033[0m\n&quot;</span>);</span><br><span class="line">            sign_in(&amp;(*numofuser),filename,user);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;密  码：&quot;</span>);</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> c;</span><br><span class="line">	<span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment">//getch()这个函数是一个不回显函数，当用户按下某个字符时，函数自动读取，无需按回车</span></span><br><span class="line">		<span class="comment">//函数用途：从控制台读取一个字符，但不显示在屏幕上</span></span><br><span class="line">		c = getch();</span><br><span class="line">        <span class="comment">//如果按下Esc键可以退出</span></span><br><span class="line">        <span class="keyword">if</span>((c<span class="number">-48</span>) == (<span class="number">-21</span>))&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n\033[;31;1m      退出成功！     \033[0m\n&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">		<span class="comment">//windows平台下按下回车（ENTER）键会产生两个转义字符 \r\n，因此getch返回13(\r)，</span></span><br><span class="line">		<span class="comment">//				而&#x27;\n‘的的转义字符无法读取，因此无法通过判断&#x27;\n&#x27;的方式结束输入，</span></span><br><span class="line">		<span class="comment">//可以通过读取第一个转义字符进行判断结束输入</span></span><br><span class="line">		<span class="keyword">if</span> (c == <span class="string">&#x27;\r&#x27;</span>)<span class="comment">//按下回车键时结束输入，退出</span></span><br><span class="line">		&#123;</span><br><span class="line">			keyp1[i] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (c == <span class="string">&#x27;\b&#x27;</span>)<span class="comment">//遇到退格键时（←Backsapce)</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="comment">//当没有输入密码时，即输入的密码为空时，不进行任何操作</span></span><br><span class="line">			<span class="comment">//即输入的密码不为空时，对显示的字符进行退格</span></span><br><span class="line">			<span class="keyword">if</span> (i &gt; <span class="number">0</span>) </span><br><span class="line">			&#123; </span><br><span class="line">				i--;</span><br><span class="line">				<span class="comment">//对显示的字符进行退格，两个\b之间存在一个空格</span></span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;\b \b&quot;</span>);</span><br><span class="line">						</span><br><span class="line">				keyp1[i] = <span class="string">&#x27;\0&#x27;</span>;<span class="comment">//修改输入的字符</span></span><br><span class="line">				<span class="keyword">continue</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span><span class="comment">//没有遇到回车键时和退格键时，读取输入的密码存储在字符串password中</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;*&quot;</span>);	<span class="comment">//对输入的密码在控制台显示*号</span></span><br><span class="line">			keyp1[i] = c;<span class="comment">//存储输入的字符		</span></span><br><span class="line">			<span class="keyword">if</span> (i &lt; <span class="number">20</span>) i++;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">	<span class="keyword">if</span> (i &gt; <span class="number">0</span>) ;</span><br><span class="line">	<span class="keyword">else</span>  <span class="built_in">printf</span>(<span class="string">&quot;输入的密码为空&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请确认密码&quot;</span>);</span><br><span class="line">    <span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> d;</span><br><span class="line">	<span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		d = getch();</span><br><span class="line">        <span class="keyword">if</span>((d<span class="number">-48</span>) == (<span class="number">-21</span>))&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n\033[;31;1m      退出成功！     \033[0m\n&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">		<span class="keyword">if</span> (d == <span class="string">&#x27;\r&#x27;</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			keyp2[j] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (d == <span class="string">&#x27;\b&#x27;</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (j &gt; <span class="number">0</span>) </span><br><span class="line">			&#123; </span><br><span class="line">				j--;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;\b \b&quot;</span>);	</span><br><span class="line">				keyp2[j] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">				<span class="keyword">continue</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">			keyp2[j] = d;	</span><br><span class="line">			<span class="keyword">if</span> (j &lt; <span class="number">20</span>) j++;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">     </span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">	<span class="keyword">if</span> (j &gt; <span class="number">0</span>) ;</span><br><span class="line">	<span class="keyword">else</span>  <span class="built_in">printf</span>(<span class="string">&quot;输入的密码为空&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">strcmp</span>(keyp1,keyp2)!=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\033[;31;5m   两次输入密码不一致，请重新输入! \033[0m\n&quot;</span>);</span><br><span class="line">        sign_in(&amp;(*numofuser),filename,user);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> flag=<span class="number">0</span>;   </span><br><span class="line">    <span class="built_in">strcpy</span>(user[*numofuser].name,keyn);</span><br><span class="line">    <span class="built_in">strcpy</span>(user[*numofuser].pwd,keyp1);</span><br><span class="line">    user[*numofuser].numofmemwd=<span class="number">0</span>;</span><br><span class="line">    (*numofuser)++;</span><br><span class="line">    FILE *fp;</span><br><span class="line">    fp=fopen(filename,<span class="string">&quot;w&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(fp!=<span class="literal">NULL</span>)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;(*numofuser)<span class="number">-1</span>;k++)&#123;</span><br><span class="line">            <span class="built_in">fprintf</span>(fp,<span class="string">&quot;%s %s %d\n&quot;</span>,user[k].name,user[k].pwd,user[k].numofmemwd);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">fprintf</span>(fp,<span class="string">&quot;%s %s %d&quot;</span>,user[*numofuser<span class="number">-1</span>].name,user[*numofuser<span class="number">-1</span>].pwd,user[*numofuser<span class="number">-1</span>].numofmemwd);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;文件打开失败\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(fp);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n\033[;31;5m      %s,恭喜您，注册成功\033[0m\n&quot;</span>,keyn);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请重新登录！\n&quot;</span>);</span><br><span class="line">    login(&amp;(*numofuser),user);</span><br><span class="line">    flag=<span class="number">1</span>;      </span><br><span class="line">    <span class="keyword">if</span>(flag==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\033[;31;5m注册失败!!!\033[0m\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//登录函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">login</span><span class="params">(<span class="keyword">int</span> *numofuser,struct userlist user[])</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> keyn[<span class="number">10</span>],keyp[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;用户名：&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,keyn);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;密  码：&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>,flag=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">char</span> c;</span><br><span class="line">	    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">	    &#123;</span><br><span class="line">		    c = getch();</span><br><span class="line">            <span class="keyword">if</span>((c<span class="number">-48</span>) == (<span class="number">-21</span>))&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;\n\033[;31;1m      退出成功！     \033[0m\n&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">		    <span class="keyword">if</span> (c == <span class="string">&#x27;\r&#x27;</span>)</span><br><span class="line">		    &#123;</span><br><span class="line">			    keyp[i] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">			    <span class="keyword">break</span>;</span><br><span class="line">		    &#125;</span><br><span class="line">		    <span class="keyword">if</span> (c == <span class="string">&#x27;\b&#x27;</span>)</span><br><span class="line">		    &#123;</span><br><span class="line">			    <span class="keyword">if</span> (i &gt; <span class="number">0</span>) </span><br><span class="line">			    &#123; </span><br><span class="line">				    i--;</span><br><span class="line">				    <span class="built_in">printf</span>(<span class="string">&quot;\b \b&quot;</span>);	</span><br><span class="line">				    keyp[i] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">				    <span class="keyword">continue</span>;</span><br><span class="line">			    &#125;</span><br><span class="line">		    &#125;</span><br><span class="line">		    <span class="keyword">else</span></span><br><span class="line">		    &#123;</span><br><span class="line">			    <span class="built_in">printf</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">			    keyp[i] = c;	</span><br><span class="line">			    <span class="keyword">if</span> (i &lt; <span class="number">20</span>) i++;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">		    &#125;</span><br><span class="line">	    &#125;</span><br><span class="line">	    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">	    <span class="keyword">if</span> (i &gt; <span class="number">0</span>) ;</span><br><span class="line">	    <span class="keyword">else</span>  <span class="built_in">printf</span>(<span class="string">&quot;输入的密码为空&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;*numofuser;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">strcmp</span>(keyn,user[i].name)==<span class="number">0</span>&amp;&amp;<span class="built_in">strcmp</span>(keyp,user[i].pwd)==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;\n\033[;31;1m      %s,恭喜您，登录成功! \033[0m\n&quot;</span>,keyn);</span><br><span class="line">                flag=<span class="number">1</span>;</span><br><span class="line">                fakemain(user[i].name);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\033[;31;5m     用户名或密码错误，请重新输入!!! \033[0m\n&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        &#125;</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="dictionary-c"><a href="#dictionary-c" class="headerlink" title="dictionary.c"></a>dictionary.c</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;function.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//本文件的主函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fakemain</span><span class="params">(<span class="keyword">char</span> name[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">entry</span> <span class="title">ent</span>[10000];</span></span><br><span class="line">    <span class="keyword">int</span> numofwords = <span class="number">0</span>, choose;</span><br><span class="line">    <span class="keyword">char</span> FILEPATH[<span class="number">30</span>] = <span class="string">&quot;new_dictionary.txt&quot;</span>;</span><br><span class="line">    search(FILEPATH, ent, &amp;numofwords);</span><br><span class="line">    UI(&amp;numofwords, ent, FILEPATH, &amp;choose, name);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查询有多少个词条的功能函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">search</span><span class="params">(<span class="keyword">char</span> filepath[], struct entry ent[], <span class="keyword">int</span> *numofwords)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FILE *fp;</span><br><span class="line">    fp = fopen(filepath, <span class="string">&quot;a+&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (fp != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (!feof(fp))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">fscanf</span>(fp, <span class="string">&quot;%s %s&quot;</span>, &amp;ent[*numofwords].english, &amp;ent[*numofwords].chinese);</span><br><span class="line">            (*numofwords)++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\033[;31;5m文件读取失败！！！ \033[0m\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(fp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//英译汉功能函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">E2C</span><span class="params">(<span class="keyword">int</span> *numofwords, struct entry ent[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> key[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入要查询的词(输入0000退出查询)：&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, key);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(key, <span class="string">&quot;0000&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; *numofwords; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">strcmp</span>(key, ent[i].english) == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;\033[;33;5m\&quot;%s\&quot; 的中文释义为：%s\033[0m\n&quot;</span>, ent[i].english, ent[i].chinese);</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\033[;31;5m查无此词!!!\033[0m\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//汉译英功能函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">C2E</span><span class="params">(<span class="keyword">int</span> *numofwords, struct entry ent[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> key[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入要查询的词(输入0000退出查询):&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, key);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(key, <span class="string">&quot;0000&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; *numofwords; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">strstr</span>(ent[i].chinese, key) != <span class="literal">NULL</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;\033[;33;5m\&quot;%s\&quot; 对应的英文是：\&quot;%s\&quot;\033[0m\n&quot;</span>, ent[i].chinese, ent[i].english);</span><br><span class="line">                flag++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\033[;31;5m查无此词!!!\033[0m\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//删除词条功能函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">deleteentry</span><span class="params">(<span class="keyword">int</span> *numofwords, struct entry ent[], <span class="keyword">char</span> filepath[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> key[<span class="number">20</span>];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入要删去的词(输入0000退出删除):&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, key);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(key, <span class="string">&quot;0000&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; *numofwords; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(key, ent[i].english) == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt; (*numofwords) - <span class="number">1</span>; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                ent[j] = ent[j + <span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            (*numofwords)--;</span><br><span class="line">            FILE *fp;</span><br><span class="line">            fp = fopen(filepath, <span class="string">&quot;w+&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (fp != <span class="literal">NULL</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; (*numofwords) - <span class="number">1</span>; k++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">fprintf</span>(fp, <span class="string">&quot;%s %s\n&quot;</span>, ent[k].english, ent[k].chinese);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">fprintf</span>(fp, <span class="string">&quot;%s %s&quot;</span>, ent[*numofwords].english, ent[*numofwords].chinese);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;\033[;33;5m词条删除成功!\033[0m\n&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;文件读取失败\n&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            fclose(fp);</span><br><span class="line">            flag = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (flag == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\033[;31;5m查无此词!!!\033[0m\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//用户操作界面</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">UI</span><span class="params">(<span class="keyword">int</span> *numofwords, struct entry ent[], <span class="keyword">char</span> filepath[], <span class="keyword">int</span> *choose, <span class="keyword">char</span> name[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">/*操作界面*/</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n\033[;33;5m*************************************************\033[0m\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\033[;33;5m*                欢迎使用电子词典               *\033[0m\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\033[;33;5m*************************************************\033[0m\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\033[;33;5m*     1.英译汉      2.汉译英     3.删除词条     *\033[0m\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\033[;33;5m*     4.添加词条    5.修改词条   6.背单词       *\033[0m\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\033[;33;5m*               7. 保 存 并 退 出               *\033[0m\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\033[;33;5m*************************************************\033[0m\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\033[;33;5m当前字典一共用%d个单词\033[0m\n&quot;</span>, *numofwords);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//用户输入选择</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入：&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;(*choose));</span><br><span class="line">    <span class="keyword">switch</span> (*choose)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        E2C(&amp;(*numofwords), ent);</span><br><span class="line">        UI(&amp;(*numofwords), ent, filepath, &amp;(*choose), name);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        C2E(&amp;(*numofwords), ent);</span><br><span class="line">        UI(&amp;(*numofwords), ent, filepath, &amp;(*choose), name);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">        deleteentry(&amp;(*numofwords), ent, filepath);</span><br><span class="line">        UI(&amp;(*numofwords), ent, filepath, &amp;(*choose), name);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">        addentry(&amp;(*numofwords), ent, filepath);</span><br><span class="line">        UI(&amp;(*numofwords), ent, filepath, &amp;(*choose), name);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">        modientry(&amp;(*numofwords), ent, filepath);</span><br><span class="line">        UI(&amp;(*numofwords), ent, filepath, &amp;(*choose), name);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">6</span>:reciteword(name,user,ent,&amp;numofuser);</span><br><span class="line">        UI(&amp;(*numofwords), ent, filepath, &amp;(*choose), name);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">7</span>:<span class="built_in">printf</span>(<span class="string">&quot;\033[;31;5m        保存成功,欢迎再次使用!\033[0m\n&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\033[;31;5m输入错误，请重新输入!!!\033[0m\n&quot;</span>);</span><br><span class="line">        UI(&amp;(*numofwords), ent, filepath, &amp;(*choose), name);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//添加词条功能函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addentry</span><span class="params">(<span class="keyword">int</span> *numofwords, struct entry ent[], <span class="keyword">char</span> filepath[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> keye[<span class="number">20</span>], keyc[<span class="number">20</span>];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入要添加的单词(输入0000退出添加):&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, &amp;keye);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(keye, <span class="string">&quot;0000&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; *numofwords; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(ent[i].english, keye) == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;该词已在单词库中！\n&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入中文释义:&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, &amp;keyc);</span><br><span class="line">    <span class="keyword">int</span> flag = <span class="number">0</span>, tmp;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; *numofwords; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(keye, ent[i].english) &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            tmp = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = *numofwords - <span class="number">1</span>; j &gt; tmp; j--)</span><br><span class="line">    &#123;</span><br><span class="line">        ent[j + <span class="number">1</span>] = ent[j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">strcpy</span>(ent[tmp + <span class="number">1</span>].english,keye);</span><br><span class="line">    <span class="built_in">strcpy</span>(ent[tmp + <span class="number">1</span>].chinese,keyc);</span><br><span class="line">    (*numofwords)++;</span><br><span class="line">    FILE *fp;</span><br><span class="line">    fp = fopen(filepath, <span class="string">&quot;w&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (fp != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; (*numofwords) - <span class="number">1</span>; k++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">fprintf</span>(fp, <span class="string">&quot;%s %s\n&quot;</span>, ent[k].english, ent[k].chinese);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">fprintf</span>(fp, <span class="string">&quot;%s %s&quot;</span>, ent[*numofwords - <span class="number">1</span>].english, ent[*numofwords - <span class="number">1</span>].chinese);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;文件打开失败\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(fp);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\033[;33;5m添加成功！！！\033[0m\n&quot;</span>);</span><br><span class="line">    flag = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (flag == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;添加失败!!!\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//修改词条功能函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modientry</span><span class="params">(<span class="keyword">int</span> *numofwords, struct entry ent[], <span class="keyword">char</span> filepath[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> key[<span class="number">20</span>], keye[<span class="number">20</span>], keyc[<span class="number">20</span>];</span><br><span class="line">    FILE *fp;</span><br><span class="line">    <span class="keyword">int</span> flag = <span class="number">0</span>, tmp;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入要修改的单词(退出修改请输入0000):&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, key);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(key, <span class="string">&quot;0000&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; *numofwords; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">strcmp</span>(key, ent[i].english) == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt; (*numofwords) - <span class="number">1</span>; j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    ent[j] = ent[j + <span class="number">1</span>];</span><br><span class="line">                &#125;</span><br><span class="line">                (*numofwords)--;</span><br><span class="line">                FILE *fp;</span><br><span class="line">                fp = fopen(filepath, <span class="string">&quot;w&quot;</span>);</span><br><span class="line">                <span class="keyword">if</span> (fp != <span class="literal">NULL</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; (*numofwords) - <span class="number">1</span>; k++)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">fprintf</span>(fp, <span class="string">&quot;%s %s\n&quot;</span>, ent[k].english, ent[k].chinese);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="built_in">fprintf</span>(fp, <span class="string">&quot;%s %s&quot;</span>, ent[*numofwords].english, ent[*numofwords].chinese);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\033[;31;5m查无此词！！！\033[0m\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">while</span> (!flag);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入修改后的英文和中文(其间请用空格或换行隔开):\n&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, keye);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, keyc);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; *numofwords; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(ent[i].english, keye) == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\033[;31;5m该词已在单词库中！\033[0m\n&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; *numofwords; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(keye, ent[i].english) &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            tmp = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = *numofwords - <span class="number">1</span>; j &gt; tmp; j--)</span><br><span class="line">    &#123;</span><br><span class="line">        ent[j + <span class="number">1</span>] = ent[j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">strcpy</span>(ent[tmp + <span class="number">1</span>].english, keye);</span><br><span class="line">    <span class="built_in">strcpy</span>(ent[tmp + <span class="number">1</span>].chinese, keyc);</span><br><span class="line">    (*numofwords)++;</span><br><span class="line">    fp = fopen(filepath, <span class="string">&quot;w&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (fp != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; (*numofwords) - <span class="number">1</span>; k++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">fprintf</span>(fp, <span class="string">&quot;%s %s\n&quot;</span>, ent[k].english, ent[k].chinese);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">fprintf</span>(fp, <span class="string">&quot;%s %s&quot;</span>, ent[*numofwords - <span class="number">1</span>].english, ent[*numofwords - <span class="number">1</span>].chinese);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\033[;33;5m修改完成!\033[0m\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;文件打开失败\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(fp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//背单词功能函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">reciteword</span><span class="params">(<span class="keyword">char</span> name[],struct userlist user[],struct entry ent[],<span class="keyword">int</span> *numofuser)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, choice, station, m;</span><br><span class="line">    FILE *fp;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; *numofuser; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(user[i].name, name) == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            station = user[i].numofmemwd;</span><br><span class="line">            m = i;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\033[;35;5m     您已经背了%d个单词了，继续加油哦~(&#x27;.&#x27;)~\033[0m\n&quot;</span>, user[i].numofmemwd);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n\033[;34;5m*************************************\033[0m\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\033[;34;5m*      1.背新单词    2.复习单词     *\033[0m\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\033[;34;5m*************************************\033[0m\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入：&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;choice);</span><br><span class="line">    <span class="keyword">switch</span> (choice)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;请输入这次要背的单词数：&quot;</span>);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;\033[;33;5m   %s %s\033[0m\n&quot;</span>, ent[station + i].english, ent[station + i].chinese);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\033[;33;5m你是最棒的！~(&#x27;o&#x27;)~\033[0m\n&quot;</span>);</span><br><span class="line">            user[m].numofmemwd += n;</span><br><span class="line">            fp = fopen(<span class="string">&quot;user.txt&quot;</span>, <span class="string">&quot;w&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (fp != <span class="literal">NULL</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; (*numofuser)<span class="number">-1</span>; k++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">fprintf</span>(fp, <span class="string">&quot;%s %s %d\n&quot;</span>, user[k].name, user[k].pwd, user[k].numofmemwd);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">fprintf</span>(fp, <span class="string">&quot;%s %s %d&quot;</span>, user[*numofuser - <span class="number">1</span>].name, user[*numofuser - <span class="number">1</span>].pwd, user[*numofuser - <span class="number">1</span>].numofmemwd);</span><br><span class="line">            &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;\033[;31;5m文件读取失败！！！ \033[0m\n&quot;</span>);</span><br><span class="line">            &#125;   </span><br><span class="line">            fclose(fp);</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;请输入这次要复习的单词数：&quot;</span>);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;\033[;33;5m   %s %s\033[0m\n&quot;</span>, ent[station - i - <span class="number">1</span>].english, ent[station - i - <span class="number">1</span>].chinese);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\033[;33;5m你是最棒的！~(&#x27;o&#x27;)~\033[0m\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:<span class="built_in">printf</span>(<span class="string">&quot;\033[;31;5m输入错误，请重新输入!!!\033[0m\n&quot;</span>);</span><br><span class="line">            reciteword(name,user,ent,&amp;(*numofuser));</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="function-h"><a href="#function-h" class="headerlink" title="function.h"></a>function.h</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> function_h</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> function_h</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXC 20</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXE 20</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> total 10000</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">entry</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> english[MAXE+<span class="number">1</span>]; <span class="comment">//key </span></span><br><span class="line">    <span class="keyword">char</span> chinese[MAXC+<span class="number">1</span>];</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">entry</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">userlist</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">char</span> pwd[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">int</span> numofmemwd;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">userlist</span> <span class="title">user</span>[1000];</span></span><br><span class="line"><span class="keyword">int</span> numofuser=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*函数声明*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">search</span><span class="params">(<span class="keyword">char</span> filepath[],struct entry ent[],<span class="keyword">int</span> *numofwords)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">E2C</span><span class="params">(<span class="keyword">int</span> *numofwords,struct entry ent[])</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">C2E</span><span class="params">(<span class="keyword">int</span> *numofwords,struct entry ent[])</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">deleteentry</span><span class="params">(<span class="keyword">int</span> *numofwords,struct entry ent[],<span class="keyword">char</span> filepath[])</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">UI</span><span class="params">(<span class="keyword">int</span> *numofwords,struct entry ent[],<span class="keyword">char</span> filepath[],<span class="keyword">int</span> *choose,<span class="keyword">char</span> name[])</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addentry</span><span class="params">(<span class="keyword">int</span> *numofwords,struct entry ent[],<span class="keyword">char</span> filepath[])</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modientry</span><span class="params">(<span class="keyword">int</span> *numofwords,struct entry ent[],<span class="keyword">char</span> filepath[])</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fakemain</span><span class="params">(<span class="keyword">char</span> name[])</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(struct userlist user[],<span class="keyword">int</span> *numofuser,<span class="keyword">char</span> filename[])</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sign_in</span><span class="params">(<span class="keyword">int</span> *numofuser,<span class="keyword">char</span> filename[],struct userlist user[])</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">login</span><span class="params">(<span class="keyword">int</span> *numofuser,struct userlist user[])</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">reciteword</span><span class="params">(<span class="keyword">char</span> name[],struct userlist user[],struct entry ent[],<span class="keyword">int</span> *numofuser)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>项目</category>
      </categories>
      <tags>
        <tag>difficult</tag>
      </tags>
  </entry>
</search>
